<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dummy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
image_speed = 0;
is_aiming = 0;
is_running = 0;
is_shooting = 0;
can_knife = true;
is_reloading = 0;
is_switching = 0;
current_weapon = 0;
hud = obj_pl01_wep_hud;
weapon = ds_list_find_value(global.pl01_weapon_inventory, 0);
weapons_inventory = global.pl01_weapon_inventory;

switch(global.pl01_character) {
    case 1: {
        sprite_index = spr_char01;
        break;        
    }
    default: {
        break;
    }
}


// DS_List for storing inventory's weapons chamber ammmo
weapons_ammo = ds_list_create();

// When creating, adding max ammo. Weapons hasn't been fired yet.
for(i = 0; i &lt; ds_list_size(weapons_inventory); i++) {
    inventory_weapon = instance_create(x,y, ds_list_find_value(global.pl01_weapon_inventory, i));
    ds_list_add(weapons_ammo, inventory_weapon.max_ammo);
    with(inventory_weapon) { instance_destroy(); }    
}

instance_create(x, y, obj_pl01_hand1);
with (instance_create(x, y, weapon)) {
    shooter = obj_pl01;
}
instance_create(x, y, obj_pl01_hand2);

// DS_List for storing ammo types in bag (0 for HG, 1 for MG, 2 for SG, 3 for RFL).
ammo_inventory = global.pl01_ammo_inventory;
ds_list_add(ammo_inventory,0,0,0,0);

// Creating initial ammo in the bag
for(i = 0; i &lt; ds_list_size(weapons_inventory); i++) {
    inventory_weapon = instance_create(x,y, ds_list_find_value(global.pl01_weapon_inventory, i));
    ds_list_add(weapons_ammo, inventory_weapon.max_ammo);
    ds_list_replace(ammo_inventory, inventory_weapon.ammo_type, (inventory_weapon.max_ammo)*2);
    with(inventory_weapon) { instance_destroy(); }    
}
current_ammo = ds_list_find_value(ammo_inventory, 2);
hud = instance_create(x,y, hud);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_switching = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_reloading = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_shooting = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scp_controls(global.keybindings, 0, 4, obj_pl01_hand2, self);

if(is_reloading == 1)   { image_index = 1; } 
else if(is_aiming == 1) { image_index = 2; } 
else                    { image_index = 0; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if(weapon == obj_wep00) {
    draw_sprite_ext(
        weapon.sprite_index, 
        1, 
        x + (16 * image_xscale), 
        y + 64, image_xscale,
        image_yscale,
        225 * image_xscale,
        -1,
        1
    ); 
} else {
    draw_sprite_ext(
        spr_wep00, 
        2, 
        x + (16 * image_xscale), 
        y + 64, image_xscale,
        image_yscale,
        225 * image_xscale,
        -1,
        1
    );
}

draw_text(0, 64, is_switching);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
