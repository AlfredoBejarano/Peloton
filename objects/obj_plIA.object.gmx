<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dummy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_player_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
image_speed = 0;
target = noone;
is_aiming = 0;
is_shooting = 0;
can_knife = true;
is_switching = 0;
is_reloading = 0;
current_weapon = 0;
character = 2;
being_attacked = 0;
can_move = 1;
can_take_damage = 1;
damage_direction = 0;
is_taking_damage = 0;
can_face = 0;
spd = 4; 
eye_index = 0;
mouth_index = 0;
hp = 100;
weapon = obj_wep06;
abutton = noone;
// Creates the weapon
with (instance_create(x, y, weapon)) {
    shooter = obj_plIA;
}

sprite_index = ds_list_find_value(player_skin_factory(character), 0);

// Creates hand 1.
hand1 = instance_create(x, y, obj_hand1);
with (hand1) {
    player = obj_plIA;
    sprite_index = ds_list_find_value(player_skin_factory(player.character), 1);
}

// Creates hand 2.
hand2 = instance_create(x, y, obj_hand2);
with (hand2) {
    player = obj_plIA;
    init_hand2(obj_plIA);
}

// Sets knife sprite for the player
knife_sprite = ds_list_find_value(player_skin_factory(character), 3);

// Sets mouth sprite
mouth_sprite = ds_list_find_value(player_skin_factory(character), 4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hp &gt; 50) { 
    eye_index = 0; 
} else { 
    eye_index = 1; 
}

image_angle = 0;
is_taking_damage = 0;
can_take_damage = 1;
hspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_switching = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weapon.ammo = weapon.max_ammo;
is_reloading = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_shooting = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
current_ammo = 999;
target = instance_nearest(x, y, obj_target_parent);

if(is_aiming == 1) { 
   spd = 2; 
   can_face = 0;
} else {
   spd = 4;
   can_face = 1;
} 

if(distance_to_object(obj_pl01) &gt; 512 &amp;&amp; can_move == 1) {
   mp_potential_step(obj_pl01.x, obj_pl01.y, spd, false);   
}

if(can_face == 1) {
   if(x &gt; obj_pl01.x) { 
      image_xscale = -1; 
   } else { 
      image_xscale = 1; 
   }
} else {
   if(x &gt; target.x) { 
      image_xscale = -1; 
   } else { 
      image_xscale = 1; 
   }
}

if(distance_to_object(target) &lt; 256) {
   is_aiming = 1;
   if(is_shooting == 0) {
      if(weapon.ammo &gt; 0) {
         perform_shoot(self);
      } else {
         if(is_reloading == 0) {
            perform_ia_reload(self);            
         }
      }
   }
   if(y &lt; target.y) {
      y += spd;
   } else if(y &gt; target.y) {
      y -= spd;
   }
   
   if(x &gt; target.x) { 
      x += spd
   } else {
      x -= spd;
   }
} else {
   is_aiming = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_en01_arm">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.zombie.is_attacking == 1) {
   take_damage(other.zombie.image_xscale, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_facial_expression();

if(weapon == obj_wep00) {
    draw_sprite_ext(
        knife_sprite, 
        1, 
        x + (16 * image_xscale), 
        y - 128 + 64, image_xscale,
        image_yscale,
        225 * image_xscale,
        -1,
        1
    ); 
} else {
    draw_sprite_ext(
        knife_sprite, 
        2, 
        x + (16 * image_xscale), 
        y -128 + 64, image_xscale,
        image_yscale,
        225 * image_xscale,
        -1,
        1
    );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
